version: "3.8"

services:
  notify:
    build: ./notify-service/app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./notify-service/app/:/usr/src/notify-service/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db

  auth:
    build:
      context: ./auth-service/
      dockerfile: DOCKERFILE
    env_file:
      - ./.env.dev
    depends_on:
      - db
    ports:
      - "3000:3000"

  db:
    image: postgres:15.2-alpine3.17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.dev.db

  rabbitmq:
    image: rabbitmq:3.11.0-management
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - ./.env.dev

  celery:
    build:
      context: ./notify-service/app
    command: celery -A notification worker -l info
    volumes:
      - ./notify-service/app/:/usr/src/notify-service/app/

    env_file:
      - ./.env.dev

    depends_on:
      - db
      - rabbitmq

  rango:
    build:
      context: ./rango/
      dockerfile: Dockerfile

    env_file:
      - ./.env.dev

    ports:
      - "8080:8080"

    depends_on:
      - rabbitmq

volumes:
  postgres_data:
